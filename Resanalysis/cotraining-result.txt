First Time:
[190, 197, 191, 190, 199, 202, 188, 189, 182, 178, 180, 185, 174, 183, 189]
[227, 290, 264, 240, 240, 257, 230, 260, 248, 251, 256, 269, 253, 255, 250]
[209, 242, 250, 232, 226, 241, 220, 243, 220, 230, 231, 241, 231, 233, 235]
Summarize
1.能检测出的异常点的数量会有一个先上升，后下降的总体趋势，但总体来说，Co-Training能够提高每个分类的准确率
2.但是结果显示，使用Co-Training分类的结果没有使用GB的好，这个该怎么解释？也就是说在后四个特征的基础上加入前四个特征会让结果变坏
3.特征是需要解决的第一个问题，选择比RF效果更好的分类器是另一个问题，这里可以考虑一些经典的基础分类算法

Second Time:
[135, 194, 203, 232, 256, 251, 265, 282, 295, 323, 333, 325, 321, 330, 309]
[222, 223, 224, 226, 247, 237, 269, 259, 280, 266, 292, 287, 293, 289, 292]
[199, 207, 218, 228, 236, 239, 270, 257, 275, 268, 292, 289, 289, 290, 293]
Summarize
1.第二次实验加入了对于时间序列数据进行统计得出的7个特征：max, min, mean, var, 0+, mean+, allmean+
2.第二次试验结果的整体走向要优于第一次实验，每次迭代的结果波动明显降低，最终结果相比初始结果能有100%， 30%， 50%的提升
3.最终的Co-Training结果和TC的结果非常接近，原因可能是GB的概率输出和RF的概率输出标准不同，GB的概率输出更为极端化，因此在遇到差异的时候结果会偏向GB的结果

Third Time:
[0.7719590573672935, 0.7557724351344918, 0.7467269697691026, 0.7460128540823613, 0.7455367769578671, 0.7436324684598905, 0.7424422756486551, 0.7414901213996667, 0.7395858129016901, 0.7364913115924779, 0.7314925017852892, 0.7364913115924779, 0.725303499166865, 0.7324446560342776, 0.7379195429659605]
[0.5217391304347826, 0.4416135881104034, 0.4114285714285714, 0.4148936170212766, 0.41403508771929826, 0.4092465753424658, 0.4088669950738916, 0.4065040650406504, 0.3993453355155483, 0.3950617283950617, 0.38672438672438675, 0.39759036144578314, 0.37751004016064255, 0.3905579399141631, 0.39747634069400634]
[0.16065911431513905, 0.21421215242018538, 0.22245108135942326, 0.24098867147270855, 0.243048403707518, 0.24613800205973224, 0.2564366632337796, 0.25746652935118436, 0.2512873326467559, 0.26364572605561276, 0.2760041194644696, 0.27188465499485065, 0.29042224510813597, 0.2811534500514933, 0.25952626158599384]
[156, 208, 216, 234, 236, 239, 249, 250, 244, 256, 268, 264, 282, 273, 252]

[0.7264936919781004, 0.7226850749821471, 0.7248274220423708, 0.7148298024279933, 0.7155439181147346, 0.7186384194239467, 0.7076886455605809, 0.71102118543204, 0.7095929540585575, 0.7007855272554154, 0.6974529873839562, 0.6993572958819329, 0.6831706736491312, 0.6812663651511545, 0.6607950487979053]
[0.3470790378006873, 0.353030303030303, 0.37206085753803597, 0.3476510067114094, 0.34657534246575344, 0.3576248313090418, 0.3379571248423707, 0.3386454183266932, 0.3433962264150943, 0.33016627078384797, 0.33183856502242154, 0.3278301886792453, 0.3170731707317073, 0.3063157894736842, 0.3127062706270627]
[0.20803295571575695, 0.2399588053553038, 0.27703398558187436, 0.266735324407827, 0.26055612770339853, 0.2729145211122554, 0.2760041194644696, 0.262615859938208, 0.2811534500514933, 0.286302780638517, 0.30484037075180226, 0.286302780638517, 0.3213182286302781, 0.2996910401647786, 0.3903192584963955]
[202, 233, 269, 259, 253, 265, 268, 255, 273, 278, 296, 278, 312, 291, 379]

[0.7367293501547251, 0.7322066174720304, 0.7355391573434896, 0.725065460604618, 0.7269697691025946, 0.7260176148536063, 0.7198286122351821, 0.7229231135443942, 0.7210188050464175, 0.713877648179005, 0.708164722685075, 0.7126874553677696, 0.6955486788859795, 0.6919781004522733, 0.6734110925970007]
[0.36472945891783565, 0.37080536912751677, 0.39263803680981596, 0.36470588235294116, 0.3709677419354839, 0.3680351906158358, 0.35967302452316074, 0.3615494978479197, 0.36289222373806274, 0.3524904214559387, 0.3447015834348356, 0.34832904884318766, 0.33076923076923076, 0.3179255918827508, 0.32114183764495985]
[0.1874356333676622, 0.22760041194644695, 0.26364572605561276, 0.2554067971163749, 0.26055612770339853, 0.2584963954685891, 0.27188465499485065, 0.25952626158599384, 0.27394438722966014, 0.2842430484037075, 0.29145211122554066, 0.27909371781668385, 0.309989701338826, 0.29042224510813597, 0.3707518022657055]
[182, 221, 256, 248, 253, 251, 264, 252, 266, 276, 283, 271, 301, 282, 360]

0.24 0.315
0.26 0.345
0.24 0.34

Forth Time:
[0.8081936685288641, 0.7960893854748603, 0.7914338919925512, 0.8007448789571695, 0.7970204841713222, 0.8026070763500931, 0.7970204841713222, 0.7858472998137802, 0.7774674115456238, 0.7737430167597765, 0.7802607076350093, 0.7737430167597765, 0.7756052141527002, 0.770949720670391, 0.7783985102420856]
[0.7857142857142857, 0.7664670658682635, 0.7578740157480315, 0.7615384615384615, 0.7528301886792453, 0.759469696969697, 0.7567049808429118, 0.748062015503876, 0.7465069860279441, 0.7454545454545455, 0.7551020408163265, 0.7568710359408034, 0.7634408602150538, 0.7553191489361702, 0.7672413793103449]
[0.7921810699588477, 0.7901234567901234, 0.7921810699588477, 0.8148148148148148, 0.8209876543209876, 0.8251028806584362, 0.8127572016460906, 0.7942386831275721, 0.7695473251028807, 0.7592592592592593, 0.7613168724279835, 0.7366255144032922, 0.7304526748971193, 0.7304526748971193, 0.7325102880658436]
[385, 384, 385, 396, 399, 401, 395, 386, 374, 369, 370, 358, 355, 355, 356]
[0.7616387337057728, 0.770949720670391, 0.7672253258845437, 0.7756052141527002, 0.7690875232774674, 0.770949720670391, 0.770949720670391, 0.7793296089385475, 0.7774674115456238, 0.7690875232774674, 0.770949720670391, 0.7588454376163873, 0.7653631284916201, 0.75512104283054, 0.7569832402234636]
[0.7309236947791165, 0.7542372881355932, 0.75, 0.7494908350305499, 0.7458677685950413, 0.7469135802469136, 0.7469135802469136, 0.7535641547861507, 0.7556935817805382, 0.7468879668049793, 0.7489626556016598, 0.735966735966736, 0.7447698744769874, 0.732776617954071, 0.7368421052631579]
[0.7489711934156379, 0.7325102880658436, 0.7283950617283951, 0.757201646090535, 0.742798353909465, 0.7469135802469136, 0.7469135802469136, 0.7613168724279835, 0.7510288065843621, 0.7407407407407407, 0.742798353909465, 0.7283950617283951, 0.7325102880658436, 0.7222222222222222, 0.720164609053498]
[364, 356, 354, 368, 361, 363, 363, 370, 365, 360, 361, 354, 356, 351, 350]
[0.770949720670391, 0.7774674115456238, 0.776536312849162, 0.776536312849162, 0.770949720670391, 0.7718808193668529, 0.7756052141527002, 0.7802607076350093, 0.7774674115456238, 0.7700186219739292, 0.7737430167597765, 0.7616387337057728, 0.7690875232774674, 0.7588454376163873, 0.7625698324022346]
[0.7448979591836735, 0.7589098532494759, 0.7584033613445378, 0.7479838709677419, 0.7448979591836735, 0.7464212678936605, 0.7494908350305499, 0.7530364372469636, 0.7546391752577319, 0.7453798767967146, 0.7525987525987526, 0.737603305785124, 0.7479166666666667, 0.7349896480331263, 0.7411273486430062]
[0.7510288065843621, 0.7448559670781894, 0.742798353909465, 0.7633744855967078, 0.7510288065843621, 0.7510288065843621, 0.757201646090535, 0.7654320987654321, 0.7530864197530864, 0.7469135802469136, 0.7448559670781894, 0.7345679012345679, 0.7386831275720165, 0.7304526748971193, 0.7304526748971193]
[365, 362, 361, 371, 365, 365, 368, 372, 366, 363, 362, 357, 359, 355, 355]

('OverlapNum is', 4336, 6788, 6793)
('OverlapNum is', 218689, 279771, 567685)
('OverlapNum is', 0, 3487, 4336)
('OverlapNum is', 2869, 3487, 218689)

('OverlapNum is', 4336, 6788, 6793)
('OverlapNum is', 218689, 279771, 567685)
('OverlapNum is', 0, 4496, 4336)
('OverlapNum is', 3845, 4496, 218689)

('OverlapNum is', 4336, 6788, 6793)
('OverlapNum is', 218689, 279771, 567685)
('OverlapNum is', 0, 4905, 4336)
('OverlapNum is', 4271, 4905, 218689)